@page "/login"

@using System.Security.Claims
@using BlazorServerCustomAuth.Providers
@using BlazorServerCustomAuth.Requests
@using BlazorServerCustomAuth.Services
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@inject NavigationManager navigationManager
@inject ExternalAuthService externalAuthService
@inject CustomAuthenticationStateProvider  CustomAuthenticationState

<h3>Login</h3>
<p>
O sistema usa uma api externa com o pocketbase, temos dois usuários.
</p>
<p>
usuário: edinho_general<br/>
senha: 12qw!@QW
</p>
<p>
usuário: edinho_adm<br/>
senha: 12qw!@QW
</p>
<EditForm Model="Model" OnSubmit="Autenticate">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="Email">Email</label>
        <InputText id="Email" class="form-control" @bind-Value="Model.Email" />
    </div>
    <div class="form-group">
        <label for="Password">Password</label>
        <InputText id="Password" class="form-control" @bind-Value="Model.Password"  type="password"/>
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? authenticationStateTask { get; set; }

    [CascadingParameter]
    public HttpContext? httpContext { get; set; }

    private LoginRequest Model = new LoginRequest();
    private string? errorMessage;

    private async Task Autenticate()
    {

        await CustomAuthenticationState.LoginAsync(Model);

        navigationManager.NavigateTo("/");
    }
}
